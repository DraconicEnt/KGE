# Kiaro Game Engine CMake Build File
# This software is licensed under the Draconic Free License Version 1.
# Please refer to LICENSE.txt for more information.
# Copyright (c) 2016 Draconic Entity

MESSAGE(STATUS "Configuring Engine Component ...")

CMAKE_MINIMUM_REQUIRED (VERSION 2.6)
PROJECT (Engine)

# Options specifically for the engine project
OPTION(BUILD_ASM "Build the engine with x86 assembly optimizations." OFF)

IF (BUILD_ASM)
    MESSAGE(WARNING "Building the engine with x86 assembly optimizations.")
    ADD_DEFINITIONS(-DENGINE_INLINE_ASM=1)
ENDIF (BUILD_ASM)

# The BUILD_UNITTESTS value is set by the upper project
IF (BUILD_UNITTESTS)
    ADD_DEFINITIONS(-DENGINE_TESTS=1)
ENDIF (BUILD_UNITTESTS)

# Configure the Project itself
FILE(GLOB_RECURSE ENGINE_INCLUDES "include/*.hpp")
IF(NOT ENGINE_UB)
    file(GLOB_RECURSE ENGINE_SOURCES "source/*.cpp")
ELSE (NOT ENGINE_UB)
    SET(ENGINE_SOURCES "source/UB_main.cpp")
ENDIF (NOT ENGINE_UB)

SET(ENGINE_LINKLIBRARIES ${CMAKE_DL_LIBS} ${COMPONENT_LINK_LIBRARIES} ${Boost_LIBRARIES} ${PHYSFS_LIBRARY} ${ALLEG_LIBRARY} ${allegro_LIBRARIES} ${allegro_main_LIBRARIES} ${ENet_LIBRARIES} ${IRRLICHT_LIBRARIES} ${GTEST_LIBRARIES} ${CEGUI_LIBRARIES} ${CEGUI_IrrlichtRenderer_LIBRARIES} ${BULLET_LIBRARIES})

IF (NOT WIN32)
    SET (ENGINE_LINKLIBRARIES ${ENGINE_LINKLIBRARIES} pthread SDL)
ENDIF (NOT WIN32)

# Tell CMake to treat paths relative to the cmake files
CMAKE_POLICY(SET CMP0015 NEW)

INCLUDE_DIRECTORIES ("include/" ${PYTHON_INCLUDE_DIRS} ${SOUND_INCLUDE_DIRECTORY} ${PHYS_INCLUDE_DIRECTORY} ${FMOD_INCLUDE_DIRS} ${Boost_INCLUDE_DIRS} ${EASYDELEGATE_INCLUDE_DIRECTORY} ${NET_INCLUDE_DIRECTORY} ${SUPPORT_INCLUDE_DIRECTORY} ${NET_INCLUDES} ${ALLEGRO_INCLUDE_DIRS} ${PHYSFS_INCLUDE_DIR} ${IRRLICHT_INCLUDE_DIRS} ${ENet_INCLUDE_DIRS} ${BULLET_INCLUDE_DIRS} ${GTEST_INCLUDE_DIRS} ${CEGUI_INCLUDE_DIR})
#ADD_EXECUTABLE (Engine ${ENGINE_SOURCES} ${ENGINE_INCLUDES})
ADD_LIBRARY (Engine "STATIC" ${ENGINE_SOURCES} ${ENGINE_INCLUDES})
TARGET_LINK_LIBRARIES(Engine ${ENGINE_LINKLIBRARIES})
ADD_DEPENDENCIES(Engine Net Support Phys Sound)

SET(ENGINE_LINK_LIBRARIES $<TARGET_FILE:Engine>)
GET_FILENAME_COMPONENT(ENGINE_INCLUDE_DIRECTORY "include/" ABSOLUTE)

SET(ENGINE_LINK_LIBRARIES ${ENGINE_LINK_LIBRARIES} PARENT_SCOPE)
GET_FILENAME_COMPONENT(ENGINE_INCLUDE_DIRECTORY "include/" ABSOLUTE)
SET(ENGINE_INCLUDE_DIRECTORY ${ENGINE_INCLUDE_DIRECTORY} PARENT_SCOPE)
